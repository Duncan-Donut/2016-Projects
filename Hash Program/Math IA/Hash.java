import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class Hash {
	

	public static void main(String[] args) throws IOException {
		
		Scanner Sf = new Scanner(System.in);
		
		ArrayList<String> Hash = new ArrayList<String>();
		
		System.out.println("Please enter what you desire to be encoded");
		
		String input = Sf.nextLine();
		
		char[] words = input.toCharArray();
		
		int y = 0;
		int total = 0;
		int temp = 0;
		int big = 0;
		
		for(int x = 0; x<words.length;x++){ // This statement simply runs through every letter
											// of your input
			switch(words[x]){
				case 'a': y = 1; // This assigns the variable 'a' the value of one
				case 'b': y = 2; // Each variable is different and upper or lower case letters
				case 'c': y = 3; // have different values associated with them
				case 'd': y = 4; // This list continues down to the number 52
				case 'e': y = 5; 
				case 'f': y = 6;
				case 'g': y = 7;
				case 'h': y = 8;
				case 'i': y = 9;
				case 'j': y = 10;
				case 'k': y = 11;
				case 'l': y = 12;
				case 'm': y = 13;
				case 'n': y = 14;
				case 'o': y = 15;
				case 'p': y = 16;
				case 'q': y = 17; 
				case 'r': y = 18;
				case 's': y = 19;
				case 't': y = 20;
				case 'u': y = 21;
				case 'v': y = 22;
				case 'w': y = 23;
				case 'x': y = 24;
				case 'y': y = 25;
				case 'z': y = 26;
				case 'A': y = 27;
				case 'B': y = 28;
				case 'C': y = 29;
				case 'D': y = 30;
				case 'E': y = 31;
				case 'F': y = 32;
				case 'G': y = 33;
				case 'H': y = 34;
				case 'I': y = 35;
				case 'J': y = 36;
				case 'K': y = 37;
				case 'L': y = 38;
				case 'M': y = 39;
				case 'N': y = 40;
				case 'O': y = 41;
				case 'P': y = 42;
				case 'Q': y = 43;
				case 'R': y = 44;
				case 'S': y = 45;
				case 'T': y = 46;
				case 'U': y = 47;
				case 'V': y = 48;
				case 'W': y = 49;
				case 'X': y = 50;
				case 'Y': y = 51;
				case 'Z': y = 52;
			}
			
			temp = (int) words[x] - y; /* A temporary variable that takes the value
			                            of the word and subtracts the values I gave them 
			                            in the list. This provides added security as 
			                            these numbers are generated by me and not
			                            correlated to the ASCII table. */ 
			
			total = total + temp; // Adds all of these variables together into a total
			
		}
		
			big = total * 23148; /* Multiplies this total sum of all the characters to create
			                        an eight digit number */
		
			while(String.valueOf(big).length() < 8){ //a while looping ensuring our digit is 8 digits long
				big *= 10; // if it is not 8 digits then it will continuously multiply by 10 until it is
			}	
			
					
			while(big > 0){ // a loop that runs until the 8 digit is equal to 0
				
			int actual = big % 100; /* the percentage symbol is called mod. It takes the remainder of 
			 						any number. In this case it takes the remainder when dividing by 100.
			 					    This is a simple way of getting the last two digits of a number */
			
			if(Character.toString((char)actual).matches("[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#%&'+-,./:;<=>?@`{}~^_]")){
				Hash.add(Character.toString((char)actual)); /* The above list of characters matches the two
															digit number to one of the following ASCII 
															characters and add it to the hash*/
			}
			else{
				actual = actual/10; /* If there is no ASCII value associated that matches the above list of
				                       characters it will simply add the first digit of the number */
				Hash.add(actual + "");
			}
			
			big = big / 100; /*Divides our 8 digit number by 2 every time, allowing for two new numbers be 
			                 at the end*/
			
			}
		
		
		for(String z : Hash){
			System.out.print(z);
		}
		
		
		
		
	}
}
